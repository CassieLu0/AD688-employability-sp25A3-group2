[
  {
    "objectID": "job-trends-2024.html",
    "href": "job-trends-2024.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "project: type: website output-dir: docs\nwebsite: title: “Job Trends 2024” navbar: left: - href: index.qmd text: Home - href: job-trends-2024.qmd text: Job Trends 2024\nformat: html: theme: cosmo toc: true"
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/narwhals-1.29.0.dist-info/licenses/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/narwhals-1.29.0.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "MIT License\nCopyright (c) 2024, Marco Gorelli\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/httpcore-1.0.7.dist-info/licenses/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/httpcore-1.0.7.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "Copyright © 2020, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "MIT License\nCopyright (c) 2018 - 2024 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/idna-3.10.dist-info/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/idna-3.10.dist-info/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2024, Kim Davies and contributors. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "This section presents a detailed data analysis of job market trends in 2024, focusing on AI-driven changes, salary disparities, and employment trends across different regions and industries.\n\n\n\n# Load necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.io as pio\n\n\n\n\n\ndf = pd.read_csv(\"lightcast_job_postings.csv\")\n\n# Display dataset summary\n\ndf.info()\ndf.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 118 entries, id to naics_2022_6_name\ndtypes: float64(38), object(80)\nmemory usage: 65.3+ MB\n\n\n\n\n\n\n\n\n\nduplicates\nduration\nmodeled_duration\ncompany\nmin_edu_levels\nmax_edu_levels\nemployment_type\nmin_years_experience\nmax_years_experience\nsalary\n...\nlot_occupation_group\nlot_v6_specialized_occupation\nlot_v6_occupation\nlot_v6_occupation_group\nlot_v6_career_area\nnaics_2022_2\nnaics_2022_3\nnaics_2022_4\nnaics_2022_5\nnaics_2022_6\n\n\n\n\ncount\n72476.000000\n45182.000000\n53208.000000\n7.245400e+04\n72454.000000\n16315.000000\n72454.000000\n49352.000000\n8430.000000\n30808.000000\n...\n72454.000000\n7.245400e+04\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n\n\nmean\n1.081627\n22.322695\n19.737615\n3.702704e+07\n31.482527\n2.833834\n1.058768\n5.486444\n3.773903\n117953.755031\n...\n2239.204475\n2.239318e+07\n223931.694096\n2239.204475\n22.281158\n58.352555\n587.864590\n5883.121995\n58834.317125\n588345.683937\n\n\nstd\n2.807512\n14.359085\n12.963769\n3.015089e+07\n44.747433\n0.584028\n0.286997\n3.322241\n2.576739\n45133.878359\n...\n285.424309\n2.854275e+06\n28542.747473\n285.424309\n2.854360\n18.626415\n186.259064\n1864.093904\n18642.971892\n186431.744508\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000e+00\n0.000000\n1.000000\n1.000000\n0.000000\n0.000000\n15860.000000\n...\n1111.000000\n1.111101e+07\n111110.000000\n1111.000000\n11.000000\n11.000000\n111.000000\n1111.000000\n11115.000000\n111150.000000\n\n\n25%\n0.000000\n11.000000\n10.000000\n6.505993e+06\n2.000000\n3.000000\n1.000000\n3.000000\n2.000000\n84928.500000\n...\n2310.000000\n2.310101e+07\n231010.000000\n2310.000000\n23.000000\n52.000000\n522.000000\n5223.000000\n52232.000000\n522320.000000\n\n\n50%\n0.000000\n18.000000\n16.000000\n3.761516e+07\n2.000000\n3.000000\n1.000000\n5.000000\n3.000000\n116300.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n54.000000\n541.000000\n5415.000000\n54151.000000\n541519.000000\n\n\n75%\n1.000000\n32.000000\n28.000000\n4.330689e+07\n99.000000\n3.000000\n1.000000\n8.000000\n5.000000\n145600.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n56.000000\n561.000000\n5614.000000\n56149.000000\n561499.000000\n\n\nmax\n100.000000\n59.000000\n59.000000\n1.082365e+08\n99.000000\n4.000000\n3.000000\n15.000000\n14.000000\n500000.000000\n...\n2712.000000\n2.712111e+07\n271211.000000\n2712.000000\n27.000000\n99.000000\n999.000000\n9999.000000\n99999.000000\n999999.000000\n\n\n\n\n8 rows × 38 columns"
  },
  {
    "objectID": "data_analysis.html#data-import-and-cleaning",
    "href": "data_analysis.html#data-import-and-cleaning",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "# Load necessary libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.io as pio"
  },
  {
    "objectID": "data_analysis.html#drop-unnecessary-columns",
    "href": "data_analysis.html#drop-unnecessary-columns",
    "title": "Exploratory Data Analysis",
    "section": "Drop Unnecessary Columns",
    "text": "Drop Unnecessary Columns\nWhich columns should be dropped, and why?\nThe columns selected for removal are considered redundant because they either provide duplicate information, are unnecessary for analysis, or have more detailed equivalents in the dataset. For example, \"ID\" serves as a unique identifier but is often not needed for analysis, while \"URL\" and \"ACTIVE_URLS\" contain job posting links that are useful externally but not critical for data processing. Similarly, \"LAST_UPDATED_TIMESTAMP\" is dropped because \"LAST_UPDATED_DATE\" already provides update information in a more readable format. The \"DUPLICATES\" column, which likely flags repeated entries, is also removed since duplicates can be handled separately.\nAdditionally, industry and occupational classification columns like \"NAICS2\" to \"NAICS6\" and \"SOC_2\", \"SOC_3\", \"SOC_5\" are removed because these represent different levels of classification, and more relevant or updated versions (e.g., \"NAICS_2022_2\" to \"NAICS_2022_6\") are already present in the dataset. Removing these redundant columns helps streamline the dataset, making it more efficient to analyze without losing valuable information.\n\ncolumns_to_drop = [\n    \"id\", \"duplicates\", \"last_updated_timestamp\",\n    \"naics2\", \"naics3\", \"naics4\", \"naics5\", \"naics6\",\n    \"soc_2\", \"soc_3\", \"soc_5\"\n]\n\ndf = df.drop(columns=[col for col in columns_to_drop if col in df.columns], inplace=False)\n\nprint(\"Columns after dropping:\", df.columns)\ndf.head()\n\nColumns after dropping: Index(['last_updated_date', 'posted', 'expired', 'duration', 'title_raw',\n       'body', 'modeled_expired', 'modeled_duration', 'company',\n       'company_name',\n       ...\n       'naics_2022_2', 'naics_2022_2_name', 'naics_2022_3',\n       'naics_2022_3_name', 'naics_2022_4', 'naics_2022_4_name',\n       'naics_2022_5', 'naics_2022_5_name', 'naics_2022_6',\n       'naics_2022_6_name'],\n      dtype='object', length=107)\n\n\n\n\n\n\n\n\n\nlast_updated_date\nposted\nexpired\nduration\ntitle_raw\nbody\nmodeled_expired\nmodeled_duration\ncompany\ncompany_name\n...\nnaics_2022_2\nnaics_2022_2_name\nnaics_2022_3\nnaics_2022_3_name\nnaics_2022_4\nnaics_2022_4_name\nnaics_2022_5\nnaics_2022_5_name\nnaics_2022_6\nnaics_2022_6_name\n\n\n\n\n0\n9/6/2024\n6/2/2024\n6/8/2024\n6.0\nEnterprise Analyst (II-III)\n31-May-2024\\n\\nEnterprise Analyst (II-III)\\n\\n...\nFalse\n6.0\n894731.0\nMurphy USA\n...\n44.0\nRetail Trade\n441.0\nMotor Vehicle and Parts Dealers\n4413.0\nAutomotive Parts, Accessories, and Tire Retailers\n44133.0\nAutomotive Parts and Accessories Retailers\n441330.0\nAutomotive Parts and Accessories Retailers\n\n\n1\n8/2/2024\n6/2/2024\n8/1/2024\nNaN\nOracle Consultant - Reports (3592)\nOracle Consultant - Reports (3592)\\n\\nat SMX i...\nFalse\nNaN\n133098.0\nSmx Corporation Limited\n...\n56.0\nAdministrative and Support and Waste Managemen...\n561.0\nAdministrative and Support Services\n5613.0\nEmployment Services\n56132.0\nTemporary Help Services\n561320.0\nTemporary Help Services\n\n\n2\n9/6/2024\n6/2/2024\n7/7/2024\n35.0\nData Analyst\nTaking care of people is at the heart of every...\nFalse\n8.0\n39063746.0\nSedgwick\n...\n52.0\nFinance and Insurance\n524.0\nInsurance Carriers and Related Activities\n5242.0\nAgencies, Brokerages, and Other Insurance Rela...\n52429.0\nOther Insurance Related Activities\n524291.0\nClaims Adjusting\n\n\n3\n9/6/2024\n6/2/2024\n7/20/2024\n48.0\nSr. Lead Data Mgmt. Analyst - SAS Product Owner\nAbout this role:\\n\\nWells Fargo is looking for...\nFalse\n10.0\n37615159.0\nWells Fargo\n...\n52.0\nFinance and Insurance\n522.0\nCredit Intermediation and Related Activities\n5221.0\nDepository Credit Intermediation\n52211.0\nCommercial Banking\n522110.0\nCommercial Banking\n\n\n4\n6/19/2024\n6/2/2024\n6/17/2024\n15.0\nComisiones de $1000 - $3000 por semana... Comi...\nComisiones de $1000 - $3000 por semana... Comi...\nFalse\n15.0\n0.0\nUnclassified\n...\n99.0\nUnclassified Industry\n999.0\nUnclassified Industry\n9999.0\nUnclassified Industry\n99999.0\nUnclassified Industry\n999999.0\nUnclassified Industry\n\n\n\n\n5 rows × 107 columns"
  },
  {
    "objectID": "data_analysis.html#handle-missing-values",
    "href": "data_analysis.html#handle-missing-values",
    "title": "Exploratory Data Analysis",
    "section": "Handle Missing Values",
    "text": "Handle Missing Values\nHow should missing values be handled?\nMissing values should be handled strategically based on their impact on analysis. First, visualizing missing data with a heatmap helps identify patterns and assess severity. Columns with more than 50% missing values are dropped to avoid unreliable or incomplete data. For numerical fields like \"Salary\", filling missing values with the median ensures the data remains representative without being skewed by outliers. Categorical fields like \"Industry\" are filled with \"Unknown\" to maintain completeness while preserving interpretability. This approach balances data retention and accuracy, ensuring meaningful analysis without introducing bias.\n\nimport missingno as msno\nimport matplotlib.pyplot as plt\n\n# Visualize missing data\n# Identify columns with &gt;10% missing values\nmissing_threshold = 0.1  \nmissing_cols = df.columns[df.isnull().mean() &gt; missing_threshold]\n\n# Filter DataFrame\ndf_missing = df[missing_cols]\n\n# Generate heatmap\nplt.figure(figsize=(12, 6))  \n\nmsno.heatmap(df_missing)\nplt.title(\"Missing Values Heatmap (Filtered)\")\nplt.show()\n\n\n# Drop columns with &gt;50% missing values\ndf.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)\n\n# Fill missing values\n\ndf_original = pd.read_csv(\"lightcast_job_postings.csv\")\n\ndf[\"salary\"] = df_original[\"salary\"]\n\nsalary_col = \"salary\" if \"salary\" in df.columns else None\n\nif salary_col:\n    df[salary_col].fillna(df[salary_col].median(), inplace=True)\nelse:\n    print(\"Warning: No salary-related column found!\")\n\n\ndf[\"naics6_name\"].fillna(\"Unknown\", inplace=True)\n\n&lt;Figure size 1200x600 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n/var/folders/pb/hmwvlqh13hzcxgxncl6cfhlr0000gn/T/ipykernel_71193/698073159.py:32: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  df[salary_col].fillna(df[salary_col].median(), inplace=True)\n/var/folders/pb/hmwvlqh13hzcxgxncl6cfhlr0000gn/T/ipykernel_71193/698073159.py:37: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  df[\"naics6_name\"].fillna(\"Unknown\", inplace=True)"
  },
  {
    "objectID": "data_analysis.html#remove-duplicates",
    "href": "data_analysis.html#remove-duplicates",
    "title": "Exploratory Data Analysis",
    "section": "Remove Duplicates",
    "text": "Remove Duplicates\nTo ensure each job is counted only once, we remove duplicates based on job title, company, location, and posting date.\n\nprint(\"Existing columns in DataFrame:\", df.columns.tolist())  # Display actual column names\n\n# Convert column names to lowercase for case-insensitive matching\ndf.columns = df.columns.str.lower()\n\ncolumns_to_check = [\"title\", \"company\", \"location\", \"posted\"]\nexisting_columns = [col for col in columns_to_check if col in df.columns]\n\nif not existing_columns:\n    raise ValueError(\"None of the specified columns exist in the DataFrame. Check column names!\")\n\nprint(\"Before removing duplicates:\")\nprint(df[existing_columns].head())\n\ndf = df.drop_duplicates(subset=existing_columns, keep=\"first\")\n\nprint(\"\\nAfter removing duplicates:\")\nprint(df[existing_columns].head())\n\nprint(\"\\nDuplicates removed based on:\", existing_columns)\n\nExisting columns in DataFrame: ['last_updated_date', 'posted', 'expired', 'duration', 'title_raw', 'body', 'modeled_expired', 'modeled_duration', 'company', 'company_name', 'company_raw', 'company_is_staffing', 'education_levels', 'education_levels_name', 'min_edu_levels', 'min_edu_levels_name', 'employment_type', 'employment_type_name', 'min_years_experience', 'is_internship', 'remote_type', 'remote_type_name', 'location', 'city', 'city_name', 'county', 'county_name', 'msa', 'msa_name', 'state', 'state_name', 'county_outgoing', 'county_name_outgoing', 'county_incoming', 'county_name_incoming', 'msa_outgoing', 'msa_name_outgoing', 'msa_incoming', 'msa_name_incoming', 'naics2_name', 'naics3_name', 'naics4_name', 'naics5_name', 'naics6_name', 'title', 'title_name', 'title_clean', 'certifications', 'certifications_name', 'onet', 'onet_name', 'onet_2019', 'onet_2019_name', 'cip6', 'cip6_name', 'cip4', 'cip4_name', 'cip2', 'cip2_name', 'soc_2021_2', 'soc_2021_2_name', 'soc_2021_3', 'soc_2021_3_name', 'soc_2021_4', 'soc_2021_4_name', 'soc_2021_5', 'soc_2021_5_name', 'lot_career_area', 'lot_career_area_name', 'lot_occupation', 'lot_occupation_name', 'lot_specialized_occupation', 'lot_specialized_occupation_name', 'lot_occupation_group', 'lot_occupation_group_name', 'lot_v6_specialized_occupation', 'lot_v6_specialized_occupation_name', 'lot_v6_occupation', 'lot_v6_occupation_name', 'lot_v6_occupation_group', 'lot_v6_occupation_group_name', 'lot_v6_career_area', 'lot_v6_career_area_name', 'soc_2_name', 'soc_3_name', 'soc_4', 'soc_4_name', 'soc_5_name', 'naics_2022_2', 'naics_2022_2_name', 'naics_2022_3', 'naics_2022_3_name', 'naics_2022_4', 'naics_2022_4_name', 'naics_2022_5', 'naics_2022_5_name', 'naics_2022_6', 'naics_2022_6_name', 'salary']\nBefore removing duplicates:\n                title     company  \\\n0  ET29C073C03D1F86B4    894731.0   \n1  ET21DDA63780A7DC09    133098.0   \n2  ET3037E0C947A02404  39063746.0   \n3  ET2114E0404BA30075  37615159.0   \n4  ET0000000000000000         0.0   \n\n                                            location    posted  \n0     {\\n  \"lat\": 33.20763,\\n  \"lon\": -92.6662674\\n}  6/2/2024  \n1   {\\n  \"lat\": 44.3106241,\\n  \"lon\": -69.7794897\\n}  6/2/2024  \n2   {\\n  \"lat\": 32.7766642,\\n  \"lon\": -96.7969879\\n}  6/2/2024  \n3  {\\n  \"lat\": 33.4483771,\\n  \"lon\": -112.0740373\\n}  6/2/2024  \n4  {\\n  \"lat\": 37.6392595,\\n  \"lon\": -120.9970014\\n}  6/2/2024  \n\nAfter removing duplicates:\n                title     company  \\\n0  ET29C073C03D1F86B4    894731.0   \n1  ET21DDA63780A7DC09    133098.0   \n2  ET3037E0C947A02404  39063746.0   \n3  ET2114E0404BA30075  37615159.0   \n4  ET0000000000000000         0.0   \n\n                                            location    posted  \n0     {\\n  \"lat\": 33.20763,\\n  \"lon\": -92.6662674\\n}  6/2/2024  \n1   {\\n  \"lat\": 44.3106241,\\n  \"lon\": -69.7794897\\n}  6/2/2024  \n2   {\\n  \"lat\": 32.7766642,\\n  \"lon\": -96.7969879\\n}  6/2/2024  \n3  {\\n  \"lat\": 33.4483771,\\n  \"lon\": -112.0740373\\n}  6/2/2024  \n4  {\\n  \"lat\": 37.6392595,\\n  \"lon\": -120.9970014\\n}  6/2/2024  \n\nDuplicates removed based on: ['title', 'company', 'location', 'posted']"
  },
  {
    "objectID": "data_analysis.html#job-postings-by-industry",
    "href": "data_analysis.html#job-postings-by-industry",
    "title": "Exploratory Data Analysis",
    "section": "Job Postings by Industry",
    "text": "Job Postings by Industry\nWhy this visualization?\nThis bar chart helps identify which industries have the highest number of job postings. It provides insights into industry demand, helping job seekers target sectors with more opportunities.\n\nimport plotly.express as px\nimport plotly.io as pio\n\n# Set Plotly renderer for Quarto or Jupyter\npio.renderers.default = \"notebook\"\n\n# Get top 20 industries by job postings\ntop_n = 20\nindustry_counts = df[\"naics6_name\"].value_counts().nlargest(top_n).reset_index()\nindustry_counts.columns = [\"Industry\", \"Count\"]\n\n# Create horizontal bar chart with a taller y-axis\nfig = px.bar(\n    industry_counts,\n    x=\"Industry\",\n    y=\"Count\",\n    title=f\"Top {top_n} Job Postings by Industry (NAICS6)\",\n    labels={\"Industry\": \"Industry\", \"Count\": \"Number of Job Postings\"}\n)\n\n# Extend y-axis and increase figure height\nfig.update_layout(\n    xaxis_title=\"Industry\",\n    yaxis_title=\"Number of Job Postings\",\n    yaxis=dict(range=[0, industry_counts[\"Count\"].max() * 1.2]),  # Extend y-axis\n    height=1000  # Increase figure height for better spacing\n)\n\nfig.show()\n\n        \n        \n        \n\n\n                            \n                                            \n\n\nInsights\nCustom Computer Programming Services, Administrative Management, and Employment Placement Agencies have the highest job postings, indicating strong demand in tech, consulting, and staffing sectors. Computer Systems Design and Commercial Banking also show significant job availability, reflecting growth in IT and finance. Unclassified Industry has the highest count, which may indicate miscategorized job postings or emerging sectors not yet classified. Other industries like Commercial Banking, Health Insurance, and Educational Services also show moderate job availability."
  },
  {
    "objectID": "data_analysis.html#salary-distribution-by-industry",
    "href": "data_analysis.html#salary-distribution-by-industry",
    "title": "Exploratory Data Analysis",
    "section": "Salary Distribution by Industry",
    "text": "Salary Distribution by Industry\nWhy this visualization?\nThis box plot is used to analyze salary distribution across the top 20 industries. It helps compare median salaries, salary variability, and outliers, which is crucial for understanding income potential in different fields.\n\nimport plotly.express as px\n\n# Get top 20 industries by job postings\ntop_n = 20\ntop_industries = df[\"naics6_name\"].value_counts().nlargest(top_n).index\n\n# Filter dataset for top industries\ndf_filtered = df[df[\"naics6_name\"].isin(top_industries)]\n\n# Create the box plot with an extended y-axis\nfig = px.box(\n    df_filtered,\n    x=\"naics6_name\",\n    y=\"salary\",\n    title=f\"Salary Distribution in Top {top_n} Industries\",\n    labels={\"naics6_name\": \"Industry\", \"salary\": \"Salary ($)\"},\n    points=\"all\"  # Show all outliers\n)\n\n# Extend the y-axis\nfig.update_layout(\n    xaxis_title=\"Industry\",\n    yaxis_title=\"Salary ($)\",\n    yaxis=dict(range=[0, df_filtered[\"salary\"].max() * 1.2]),  # Extend y-axis 20% above max salary\n    height=1000  # Increase figure height for better visibility\n)\n\nfig.show()\n\n                            \n                                            \n\n\nInsights\nCommercial Banking and Tech-related industries show wide salary ranges, indicating opportunities for growth. Temporary Help Services has the lowest pay, reflecting short-term or contract roles. Tech and finance roles offer both high salaries and significant growth potential."
  },
  {
    "objectID": "data_analysis.html#remote-vs.-on-site-jobs",
    "href": "data_analysis.html#remote-vs.-on-site-jobs",
    "title": "Exploratory Data Analysis",
    "section": "Remote vs. On-Site Jobs",
    "text": "Remote vs. On-Site Jobs\nWhy this visualization?\nThis pie chart compares the distribution of remote, hybrid, and on-site jobs, showing workplace flexibility trends. It helps job seekers understand how common remote opportunities are in the current job market.\n\nfig = px.pie(df, names=\"remote_type_name\", title=\"Remote vs. On-Site Jobs\")\nfig.show()\n\n                            \n                                            \n\n\nInsights\nMajority of jobs are not explicitly classified (~78.3%), which may indicate missing or unspecified remote work details in job postings. Only 17% of jobs are fully remote, suggesting that while remote work exists, it is not yet dominant in most industries. Hybrid remote jobs (3.11%) are emerging, but still a small percentage. This indicates a slow transition toward flexible work models. On-site jobs remain the norm (1.58% explicitly labeled as “Not Remote”), reinforcing that many industries still require physical presence. Remote opportunities exist but are limited, meaning job seekers should target specific industries or roles for remote work."
  },
  {
    "objectID": "data_analysis.html#geographic-variation-of-job-postings",
    "href": "data_analysis.html#geographic-variation-of-job-postings",
    "title": "Exploratory Data Analysis",
    "section": "Geographic Variation of Job Postings",
    "text": "Geographic Variation of Job Postings\nWhy this visualization?\nThis map visualizes the number of job postings by U.S. state, offering a clear look at where opportunities are most concentrated geographically. It helps job seekers understand which states have the highest job demand.\n\nstate_counts = df[\"state_name\"].value_counts().reset_index()\nstate_counts.columns = [\"State\", \"Job Postings\"]\n\nus_state_abbrev = {\n    'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR',\n    'California': 'CA', 'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE',\n    'Florida': 'FL', 'Georgia': 'GA', 'Hawaii': 'HI', 'Idaho': 'ID',\n    'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA', 'Kansas': 'KS',\n    'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\n    'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS',\n    'Missouri': 'MO', 'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV',\n    'New Hampshire': 'NH', 'New Jersey': 'NJ', 'New Mexico': 'NM',\n    'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND',\n    'Ohio': 'OH', 'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA',\n    'Rhode Island': 'RI', 'South Carolina': 'SC', 'South Dakota': 'SD',\n    'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT',\n    'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV',\n    'Wisconsin': 'WI', 'Wyoming': 'WY'\n}\n\n#   Add abbreviation column\nstate_counts[\"State Abbrev\"] = state_counts[\"State\"].map(us_state_abbrev)\n\n#   Create a choropleth map\nfig = px.choropleth(\n    state_counts,\n    locations=\"State Abbrev\",\n    locationmode=\"USA-states\",\n    color=\"Job Postings\",\n    color_continuous_scale=\"Blues\",\n    scope=\"usa\",\n    title=\"Job Postings by U.S. State\"\n)\n\nfig.update_layout(\n    geo=dict(bgcolor='rgba(0,0,0,0)'),\n    height=600\n)\n\nfig.show()\n\n                            \n                                            \n\n\nInsights Geographic Insights on Job Postings (2024–2025)\nTexas and California are leading in job postings, reflecting strong economies and diverse industries (tech, energy, entertainment).Florida, New York, and Illinois also show significant job demand due to strong finance, healthcare, and logistics sectors. Southeastern and Midwestern states like North Carolina, Georgia, and Ohio provide moderate opportunities, often with lower cost of living. Lower posting states such as Wyoming, Montana, and Alaska may reflect regional economic focus or smaller labor markets.\nThis distribution suggests job seekers may benefit from targeting high-posting states or considering relocation for greater opportunity."
  },
  {
    "objectID": "data_analysis.html#drop-unnecessary-columns-1",
    "href": "data_analysis.html#drop-unnecessary-columns-1",
    "title": "Data Analysis",
    "section": "6.1 Drop Unnecessary Columns",
    "text": "6.1 Drop Unnecessary Columns\nWhich columns should be dropped, and why?\nThe columns selected for removal are considered redundant because they either provide duplicate information, are unnecessary for analysis, or have more detailed equivalents in the dataset. For example, \"ID\" serves as a unique identifier but is often not needed for analysis, while \"URL\" and \"ACTIVE_URLS\" contain job posting links that are useful externally but not critical for data processing. Similarly, \"LAST_UPDATED_TIMESTAMP\" is dropped because \"LAST_UPDATED_DATE\" already provides update information in a more readable format. The \"DUPLICATES\" column, which likely flags repeated entries, is also removed since duplicates can be handled separately.\nAdditionally, industry and occupational classification columns like \"NAICS2\" to \"NAICS6\" and \"SOC_2\", \"SOC_3\", \"SOC_5\" are removed because these represent different levels of classification, and more relevant or updated versions (e.g., \"NAICS_2022_2\" to \"NAICS_2022_6\") are already present in the dataset. Removing these redundant columns helps streamline the dataset, making it more efficient to analyze without losing valuable information.\nquarto-executable-code-5450563D\ncolumns_to_drop = [\n    \"id\", \"duplicates\", \"last_updated_timestamp\",\n    \"naics2\", \"naics3\", \"naics4\", \"naics5\", \"naics6\",\n    \"soc_2\", \"soc_3\", \"soc_5\"\n]\n\ndf = df.drop(columns=[col for col in columns_to_drop if col in df.columns], inplace=False)\n\nprint(\"Columns after dropping:\", df.columns)\ndf.head()"
  },
  {
    "objectID": "data_analysis.html#handle-missing-values-1",
    "href": "data_analysis.html#handle-missing-values-1",
    "title": "Data Analysis",
    "section": "6.2 Handle Missing Values",
    "text": "6.2 Handle Missing Values\nHow should missing values be handled?\nMissing values should be handled strategically based on their impact on analysis. First, visualizing missing data with a heatmap helps identify patterns and assess severity. Columns with more than 50% missing values are dropped to avoid unreliable or incomplete data. For numerical fields like \"Salary\", filling missing values with the median ensures the data remains representative without being skewed by outliers. Categorical fields like \"Industry\" are filled with \"Unknown\" to maintain completeness while preserving interpretability. This approach balances data retention and accuracy, ensuring meaningful analysis without introducing bias.\nquarto-executable-code-5450563D\nimport missingno as msno\nimport matplotlib.pyplot as plt\n\n# Visualize missing data\n# Identify columns with &gt;10% missing values\nmissing_threshold = 0.1  \nmissing_cols = df.columns[df.isnull().mean() &gt; missing_threshold]\n\n# Filter DataFrame\ndf_missing = df[missing_cols]\n\n# Generate heatmap\nplt.figure(figsize=(12, 6))  \n\nmsno.heatmap(df_missing)\nplt.title(\"Missing Values Heatmap (Filtered)\")\nplt.show()\n\n\n# Drop columns with &gt;50% missing values\ndf.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)\n\n# Fill missing values\n\ndf_original = pd.read_csv(\"lightcast_job_postings.csv\")\n\ndf[\"salary\"] = df_original[\"salary\"]\n\nsalary_col = \"salary\" if \"salary\" in df.columns else None\n\nif salary_col:\n    df[salary_col].fillna(df[salary_col].median(), inplace=True)\nelse:\n    print(\"Warning: No salary-related column found!\")\n\n\ndf[\"naics6_name\"].fillna(\"Unknown\", inplace=True)"
  },
  {
    "objectID": "data_analysis.html#remove-duplicates-1",
    "href": "data_analysis.html#remove-duplicates-1",
    "title": "Data Analysis",
    "section": "6.3 Remove Duplicates",
    "text": "6.3 Remove Duplicates\nTo ensure each job is counted only once, we remove duplicates based on job title, company, location, and posting date.\nquarto-executable-code-5450563D\nprint(\"Existing columns in DataFrame:\", df.columns.tolist())  # Display actual column names\n\n# Convert column names to lowercase for case-insensitive matching\ndf.columns = df.columns.str.lower()\n\ncolumns_to_check = [\"title\", \"company\", \"location\", \"posted\"]\nexisting_columns = [col for col in columns_to_check if col in df.columns]\n\nif not existing_columns:\n    raise ValueError(\"None of the specified columns exist in the DataFrame. Check column names!\")\n\nprint(\"Before removing duplicates:\")\nprint(df[existing_columns].head())\n\ndf = df.drop_duplicates(subset=existing_columns, keep=\"first\")\n\nprint(\"\\nAfter removing duplicates:\")\nprint(df[existing_columns].head())\n\nprint(\"\\nDuplicates removed based on:\", existing_columns)"
  },
  {
    "objectID": "data_analysis.html#job-postings-by-industry-1",
    "href": "data_analysis.html#job-postings-by-industry-1",
    "title": "Data Analysis",
    "section": "7.1 Job Postings by Industry",
    "text": "7.1 Job Postings by Industry\nWhy this visualization?\nThis bar chart helps identify which industries have the highest number of job postings. It provides insights into industry demand, helping job seekers target sectors with more opportunities.\nquarto-executable-code-5450563D\nimport plotly.express as px\nimport plotly.io as pio\n\n# Set Plotly renderer for Quarto or Jupyter\npio.renderers.default = \"iframe\"\n\n# Get top 20 industries by job postings\ntop_n = 20\nindustry_counts = df[\"naics6_name\"].value_counts().nlargest(top_n).reset_index()\nindustry_counts.columns = [\"Industry\", \"Count\"]\n\n# Create horizontal bar chart with a taller y-axis\nfig = px.bar(\n    industry_counts,\n    x=\"Industry\",\n    y=\"Count\",\n    title=f\"Top {top_n} Job Postings by Industry (NAICS6)\",\n    labels={\"Industry\": \"Industry\", \"Count\": \"Number of Job Postings\"}\n)\n\n# Extend y-axis and increase figure height\nfig.update_layout(\n    xaxis_title=\"Industry\",\n    yaxis_title=\"Number of Job Postings\",\n    yaxis=dict(range=[0, industry_counts[\"Count\"].max() * 1.2]),  # Extend y-axis\n    height=1000  # Increase figure height for better spacing\n)\n\nfig.show()\n\nInsights\nCustom Computer Programming Services, Administrative Management, and Employment Placement Agencies have the highest job postings, indicating strong demand in tech, consulting, and staffing sectors. Computer Systems Design and Commercial Banking also show significant job availability, reflecting growth in IT and finance. Unclassified Industry has the highest count, which may indicate miscategorized job postings or emerging sectors not yet classified. Other industries like Commercial Banking, Health Insurance, and Educational Services also show moderate job availability."
  },
  {
    "objectID": "data_analysis.html#salary-distribution-by-industry-1",
    "href": "data_analysis.html#salary-distribution-by-industry-1",
    "title": "Data Analysis",
    "section": "7.2 Salary Distribution by Industry",
    "text": "7.2 Salary Distribution by Industry\nWhy this visualization?\nThis box plot is used to analyze salary distribution across the top 20 industries. It helps compare median salaries, salary variability, and outliers, which is crucial for understanding income potential in different fields.\nquarto-executable-code-5450563D\nimport plotly.express as px\n\n# Get top 20 industries by job postings\ntop_n = 20\ntop_industries = df[\"naics6_name\"].value_counts().nlargest(top_n).index\n\n# Filter dataset for top industries\ndf_filtered = df[df[\"naics6_name\"].isin(top_industries)]\n\n# Create the box plot with an extended y-axis\nfig = px.box(\n    df_filtered,\n    x=\"naics6_name\",\n    y=\"salary\",\n    title=f\"Salary Distribution in Top {top_n} Industries\",\n    labels={\"naics6_name\": \"Industry\", \"salary\": \"Salary ($)\"},\n    points=\"all\"  # Show all outliers\n)\n\n# Extend the y-axis\nfig.update_layout(\n    xaxis_title=\"Industry\",\n    yaxis_title=\"Salary ($)\",\n    yaxis=dict(range=[0, df_filtered[\"salary\"].max() * 1.2]),  # Extend y-axis 20% above max salary\n    height=1000  # Increase figure height for better visibility\n)\n\nfig.show()\n\nInsights\nCommercial Banking and Tech-related industries show wide salary ranges, indicating opportunities for growth. Temporary Help Services has the lowest pay, reflecting short-term or contract roles. Tech and finance roles offer both high salaries and significant growth potential."
  },
  {
    "objectID": "data_analysis.html#remote-vs.-on-site-jobs-1",
    "href": "data_analysis.html#remote-vs.-on-site-jobs-1",
    "title": "Data Analysis",
    "section": "7.3 Remote vs. On-Site Jobs",
    "text": "7.3 Remote vs. On-Site Jobs\nWhy this visualization?\nThis pie chart compares the distribution of remote, hybrid, and on-site jobs, showing workplace flexibility trends. It helps job seekers understand how common remote opportunities are in the current job market.\nquarto-executable-code-5450563D\nfig = px.pie(df, names=\"remote_type_name\", title=\"Remote vs. On-Site Jobs\")\nfig.show()\nInsights\nMajority of jobs are not explicitly classified (~78.3%), which may indicate missing or unspecified remote work details in job postings. Only 17% of jobs are fully remote, suggesting that while remote work exists, it is not yet dominant in most industries. Hybrid remote jobs (3.11%) are emerging, but still a small percentage. This indicates a slow transition toward flexible work models. On-site jobs remain the norm (1.58% explicitly labeled as “Not Remote”), reinforcing that many industries still require physical presence. Remote opportunities exist but are limited, meaning job seekers should target specific industries or roles for remote work."
  },
  {
    "objectID": "data_analysis.html#geographic-variation-of-job-postings-1",
    "href": "data_analysis.html#geographic-variation-of-job-postings-1",
    "title": "Data Analysis",
    "section": "7.4 Geographic Variation of Job Postings",
    "text": "7.4 Geographic Variation of Job Postings\nWhy this visualization? This map visualizes the number of job postings by U.S. state, offering a clear look at where opportunities are most concentrated geographically. It helps job seekers understand which states have the highest job demand.\n``gidpuxlc\nstate_counts = df[“state_name”].value_counts().reset_index() state_counts.columns = [“State”, “Job Postings”]\nus_state_abbrev = { ‘Alabama’: ‘AL’, ‘Alaska’: ‘AK’, ‘Arizona’: ‘AZ’, ‘Arkansas’: ‘AR’, ‘California’: ‘CA’, ‘Colorado’: ‘CO’, ‘Connecticut’: ‘CT’, ‘Delaware’: ‘DE’, ‘Florida’: ‘FL’, ‘Georgia’: ‘GA’, ‘Hawaii’: ‘HI’, ‘Idaho’: ‘ID’, ‘Illinois’: ‘IL’, ‘Indiana’: ‘IN’, ‘Iowa’: ‘IA’, ‘Kansas’: ‘KS’, ‘Kentucky’: ‘KY’, ‘Louisiana’: ‘LA’, ‘Maine’: ‘ME’, ‘Maryland’: ‘MD’, ‘Massachusetts’: ‘MA’, ‘Michigan’: ‘MI’, ‘Minnesota’: ‘MN’, ‘Mississippi’: ‘MS’, ‘Missouri’: ‘MO’, ‘Montana’: ‘MT’, ‘Nebraska’: ‘NE’, ‘Nevada’: ‘NV’, ‘New Hampshire’: ‘NH’, ‘New Jersey’: ‘NJ’, ‘New Mexico’: ‘NM’, ‘New York’: ‘NY’, ‘North Carolina’: ‘NC’, ‘North Dakota’: ‘ND’, ‘Ohio’: ‘OH’, ‘Oklahoma’: ‘OK’, ‘Oregon’: ‘OR’, ‘Pennsylvania’: ‘PA’, ‘Rhode Island’: ‘RI’, ‘South Carolina’: ‘SC’, ‘South Dakota’: ‘SD’, ‘Tennessee’: ‘TN’, ‘Texas’: ‘TX’, ‘Utah’: ‘UT’, ‘Vermont’: ‘VT’, ‘Virginia’: ‘VA’, ‘Washington’: ‘WA’, ‘West Virginia’: ‘WV’, ‘Wisconsin’: ‘WI’, ‘Wyoming’: ‘WY’ }\nstate_counts[“State Abbrev”] = state_counts[“State”].map(us_state_abbrev)\nfig = px.choropleth( state_counts, locations=“State Abbrev”, locationmode=“USA-states”, color=“Job Postings”, color_continuous_scale=“Blues”, scope=“usa”, title=“Job Postings by U.S. State” )\nfig.update_layout( geo=dict(bgcolor=‘rgba(0,0,0,0)’), height=600 )\nfig.show()\n**Insights**\nGeographic Insights on Job Postings (2024–2025)\n\nTexas and California are leading in job postings, reflecting strong economies and diverse industries (tech, energy, entertainment).\n\nFlorida, New York, and Illinois also show significant job demand due to strong finance, healthcare, and logistics sectors.\n\nSoutheastern and Midwestern states like North Carolina, Georgia, and Ohio provide moderate opportunities, often with lower cost of living.\n\nLower posting states such as Wyoming, Montana, and Alaska may reflect regional economic focus or smaller labor markets.\n\nThis distribution suggests job seekers may benefit from targeting high-posting states or considering relocation for greater opportunity.\n\n\n\n## Conclusion\nThis analysis provides insights into the evolving job market in 2024, highlighting AI's impact, salary trends, and employment disparities. The findings indicate how different disciplines benefit from AI's rise, with certain fields seeing more substantial salary growth. Further analysis will explore regional job differences and future career recommendations.\n:::"
  },
  {
    "objectID": "skill_gap_analysis.html",
    "href": "skill_gap_analysis.html",
    "title": "Skill Gap Analysis",
    "section": "",
    "text": "In this section, we will focus on evaluating and enhancing the skillset of our team for IT career growth. We create a team-based skill dataframe where each team member rates their proficiency in relevant IT skills on a scale of 1 to 5. Then, we compare these skills against industry demands by extracting the most sought-after skills from IT job postings. Finally, based on this analysis, we propose an improvement plan for each team member, identifying key areas to focus on and potential resources to bridge skill gaps."
  },
  {
    "objectID": "skill_gap_analysis.html#propose-an-improvement-plan",
    "href": "skill_gap_analysis.html#propose-an-improvement-plan",
    "title": "Skill Gap Analysis",
    "section": "Propose an Improvement Plan",
    "text": "Propose an Improvement Plan\n\nWhich skills should each member prioritize learning?\n\nExcel and Python are the team’s strongest shared skills, with all members scoring consistently above average in these areas.\nSQL, Azure, and Java show moderate to low proficiency across the team. In particular, Ling Lu and Luoyan Zhang should prioritize improving SQL, while all members can benefit from advancing their cloud platform skills (Azure, AWS).\nLinux is rated low, despite being highly demanded in the market. It is clear opportunity for team-wide upskilling.\nYinuo Wang demonstrates relative strength in SQL, Power BI, and Excel, positioning her well for data analytics tasks.\nLuoyan Zhang shows balanced competency across multiple skills but lacks depth in foundational programming tools like Git or JavaScript.\n\n\n\nWhat courses or resources can help?\nTo effectively bridge the identified skill gaps, the following resources are recommended:\n\n\n\n\n\n\n\nSkill\nSuggested Resources\n\n\n\n\nPython, SQL\nCodecademy, W3Schools, LeetCode, Kaggle\n\n\nTableau, Power BI\nCoursera: Data Visualization with Tableau, YouTube (Alex the Analyst), Udemy\n\n\nAWS, Azure\nAWS Cloud Practitioner, Microsoft Learn, freeCodeCamp cloud courses\n\n\nDocker, Kubernetes\nDocker Docs, Kubernetes Bootcamp (KodeKloud), YouTube (TechWorld with Nana)\n\n\nGit\nGitHub Learning Lab, freeCodeCamp Git Tutorial\n\n\nLinux\nLinux Journey, edX Linux Basics, The Linux Foundation Intro Courses\n\n\nJavaScript, Java\nJavaScript.info, Scrimba, W3Schools, Codecademy Java Track\n\n\n\nMost of these platforms offer free beginner-friendly tracks, making them ideal for self-paced group learning.\n\n\nHow can the team collaborate to bridge skill gaps?\nTo close the gap more effectively, the team can adopt the following collaboration strategies:\n\nSkill Pairing: Pair team members who are strong in a certain area with those who want to improve in that skill.\nMini Team Projects: Apply learned skills in hands-on group projects such as building dashboards or small applications.\nShared Learning Tracker: Maintain a shared Google Sheet or Notion board to track who is learning what and progress made.\n\nThese collaborative approaches encourage knowledge-sharing, accountability, and faster learning."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "2024 Job Trends",
    "section": "",
    "text": "Welcome to the 2024 Job Trends Analysis\nThis website provides an in-depth analysis of job trends for 2024 based on the latest available dataset. Below you will find an overview of the data, key insights, and interactive visualizations that reveal:\nAbout the Data\nThe dataset for 2024 has been carefully curated and cleaned to ensure reliable insights. It includes data on:\nFocus Topic: Geographic and Remote Work Analysis"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "2024 Job Trends",
    "section": "Introduction",
    "text": "Introduction\nThe job market in 2024 is currently on a significant transformation, driven by the rise of artificial intelligence (AI) and evolving remote work trends. As AI-driven roles expand, traditional career paths are shifting. This creates new opportunities and challenges across different industries and geographic locations. Thus, the flexibility of remote work is reshaping where professionals live and how companies hire. Understanding “Geographic and Remote Work Analysis” is crucial for businesses, policymakers, and job seekers navigating the changing employment landscape."
  },
  {
    "objectID": "index.html#research-rationale",
    "href": "index.html#research-rationale",
    "title": "2024 Job Trends",
    "section": "Research Rationale",
    "text": "Research Rationale\nThis study analyzes job market trends using the dataset job-market-analysis-2024, focusing on three key areas: 1. Geographic Distribution of AI vs. Non-AI Job Growth Identifying which cities and states are experiencing the highest job growth in AI-driven careers versus traditional roles. Examining how AI adoption is impacting job availability across different industries and regions. 2. Remote Work Trends Across Industries Investigating whether remote job opportunities are increasing or declining in various sectors. Analyzing how hybrid work models affect hiring patterns and employee mobility. 3. The Evolution of Tech Hubs and Regional Job Markets Assessing whether established tech hubs (e.g., Silicon Valley, Austin) still dominate hiring or if emerging locations are gaining traction. Comparing urban and rural job market dynamics for AI and non-AI careers, including wage disparities and employment opportunities. By examining these trends, this research aims to provide insights into the future of work, helping organizations and professionals adapt to an evolving job landscape influenced by AI adoption and remote work policies"
  },
  {
    "objectID": "index.html#brief-literature-review",
    "href": "index.html#brief-literature-review",
    "title": "2024 Job Trends",
    "section": "Brief Literature Review",
    "text": "Brief Literature Review\nRecent studies highlight the evolving trends and challenges of remote work across industries. Hansen et al. (Hansen et al. (2023)) analyze remote work distribution, showing that high-skilled jobs have embraced remote work, particularly in the technology sector, whereas manual and service jobs remain on-site. Similarly, Gibson (Gibson (2024)) examines labor market dynamics in Silicon Valley, revealing how remote work is leveraged to attract and retain talent in competitive regions. These studies emphasize the growing divide in remote work opportunities based on job type and location.\nOn the policy side, Olawale et al. (Olawale et al. (2024)) review IT sector remote work policies, stressing the importance of clear guidelines and technology infrastructure for efficiency and security. Meanwhile, Huang (Huang (2024)) explores how AI-driven industries reshape labor structures, further enabling remote work adoption. Together, these studies provide a comprehensive view of remote work’s trajectory, examining the key factors that drive its expansion and emphasizing the need for adaptive policies to keep pace with the evolving digital workforce."
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "2024 Job Trends",
    "section": "References",
    "text": "References\nMeet the Team\n\nLing Lu\nLuoyan Zhang\nYinuo Wang\n\nWe are excited to bring you this comprehensive analysis of the job market trends in 2024."
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "Welcome to our comprehensive analysis of the 2024 job market trends, with a focus on the transformative impact of AI, salary disparities, and evolving employment patterns across various regions and industries. This website presents an in-depth exploration of job market data, including detailed insights into industry shifts, regional differences, and emerging skill demands. Additionally, we provide a thorough skill gap analysis, helping to bridge the divide between current team capabilities and the rapidly changing requirements of the IT job market. Join us in exploring how data-driven insights can shape career paths and workforce strategies in the modern job landscape."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/missingno-0.5.2.dist-info/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/missingno-0.5.2.dist-info/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "Copyright (c) 2016 Aleksey Bilogur\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/pyzmq-26.2.1.dist-info/licenses/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/pyzmq-26.2.1.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/seaborn-0.13.2.dist-info/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/seaborn-0.13.2.dist-info/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "Copyright (c) 2012-2023, Michael L. Waskom All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the project nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/numpy/random/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/numpy/random/LICENSE.html",
    "title": "NCSA Open Source License",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\nNCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nComponents\nMany parts of this module have been derived from original sources, often the algorithm’s designer. Component licenses are located with the component code."
  },
  {
    "objectID": "quarto_env/lib/python3.13/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "href": "quarto_env/lib/python3.13/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "title": "Job Market Analysis 2024",
    "section": "",
    "text": "Copyright © 2019, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "data_analysis.html#load-dataset",
    "href": "data_analysis.html#load-dataset",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "df = pd.read_csv(\"lightcast_job_postings.csv\")\n\n# Display dataset summary\n\ndf.info()\ndf.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 72498 entries, 0 to 72497\nColumns: 118 entries, id to naics_2022_6_name\ndtypes: float64(38), object(80)\nmemory usage: 65.3+ MB\n\n\n\n\n\n\n\n\n\nduplicates\nduration\nmodeled_duration\ncompany\nmin_edu_levels\nmax_edu_levels\nemployment_type\nmin_years_experience\nmax_years_experience\nsalary\n...\nlot_occupation_group\nlot_v6_specialized_occupation\nlot_v6_occupation\nlot_v6_occupation_group\nlot_v6_career_area\nnaics_2022_2\nnaics_2022_3\nnaics_2022_4\nnaics_2022_5\nnaics_2022_6\n\n\n\n\ncount\n72476.000000\n45182.000000\n53208.000000\n7.245400e+04\n72454.000000\n16315.000000\n72454.000000\n49352.000000\n8430.000000\n30808.000000\n...\n72454.000000\n7.245400e+04\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n72454.000000\n\n\nmean\n1.081627\n22.322695\n19.737615\n3.702704e+07\n31.482527\n2.833834\n1.058768\n5.486444\n3.773903\n117953.755031\n...\n2239.204475\n2.239318e+07\n223931.694096\n2239.204475\n22.281158\n58.352555\n587.864590\n5883.121995\n58834.317125\n588345.683937\n\n\nstd\n2.807512\n14.359085\n12.963769\n3.015089e+07\n44.747433\n0.584028\n0.286997\n3.322241\n2.576739\n45133.878359\n...\n285.424309\n2.854275e+06\n28542.747473\n285.424309\n2.854360\n18.626415\n186.259064\n1864.093904\n18642.971892\n186431.744508\n\n\nmin\n0.000000\n0.000000\n0.000000\n0.000000e+00\n0.000000\n1.000000\n1.000000\n0.000000\n0.000000\n15860.000000\n...\n1111.000000\n1.111101e+07\n111110.000000\n1111.000000\n11.000000\n11.000000\n111.000000\n1111.000000\n11115.000000\n111150.000000\n\n\n25%\n0.000000\n11.000000\n10.000000\n6.505993e+06\n2.000000\n3.000000\n1.000000\n3.000000\n2.000000\n84928.500000\n...\n2310.000000\n2.310101e+07\n231010.000000\n2310.000000\n23.000000\n52.000000\n522.000000\n5223.000000\n52232.000000\n522320.000000\n\n\n50%\n0.000000\n18.000000\n16.000000\n3.761516e+07\n2.000000\n3.000000\n1.000000\n5.000000\n3.000000\n116300.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n54.000000\n541.000000\n5415.000000\n54151.000000\n541519.000000\n\n\n75%\n1.000000\n32.000000\n28.000000\n4.330689e+07\n99.000000\n3.000000\n1.000000\n8.000000\n5.000000\n145600.000000\n...\n2311.000000\n2.311131e+07\n231113.000000\n2311.000000\n23.000000\n56.000000\n561.000000\n5614.000000\n56149.000000\n561499.000000\n\n\nmax\n100.000000\n59.000000\n59.000000\n1.082365e+08\n99.000000\n4.000000\n3.000000\n15.000000\n14.000000\n500000.000000\n...\n2712.000000\n2.712111e+07\n271211.000000\n2712.000000\n27.000000\n99.000000\n999.000000\n9999.000000\n99999.000000\n999999.000000\n\n\n\n\n8 rows × 38 columns"
  },
  {
    "objectID": "data_analysis.html#job-postings-over-time",
    "href": "data_analysis.html#job-postings-over-time",
    "title": "Exploratory Data Analysis",
    "section": "Job Postings Over Time",
    "text": "Job Postings Over Time\nWhy this visualization?\nThis time series plot shows how job demand has changed over time. It’s useful to spot trends, seasonal hiring spikes, or drops (e.g., holidays, recession).\n\n\ndf[\"posted_date\"] = pd.to_datetime(df[\"posted\"], errors=\"coerce\")\n\n# Group by month\nmonthly_postings = df.groupby(df[\"posted_date\"].dt.to_period(\"M\")).size().reset_index(name=\"Job Postings\")\nmonthly_postings[\"Month\"] = monthly_postings[\"posted_date\"].dt.to_timestamp()\n\n\nfig = px.line(\n    monthly_postings,\n    x=\"Month\",\n    y=\"Job Postings\",\n    title=\"Job Postings Over Time\",\n    labels={\"Month\": \"Date\", \"Job Postings\": \"Number of Job Postings\"}\n)\n\nfig.update_layout(height=500)\nfig.show()\n\n                            \n                                            \n\n\nInsights\nThe line chart depicting job postings over time reveals a clear temporal trend in hiring activity throughout mid-2024. From early May to the end of June, there is a noticeable decline in the number of job postings, dropping from around 14,000 to approximately 12,200. This dip could be attributed to seasonal factors, such as the end of academic semesters, mid-year budget reviews, or general summer slowdowns in corporate recruitment cycles. However, beginning in early July, the job market shows a sharp rebound, with postings rising significantly through August, eventually stabilizing at around 14,700. This resurgence likely reflects renewed hiring efforts following budget resets or organizational planning periods. The uptick in late summer also aligns with typical Q3 hiring trends, where companies ramp up recruitment ahead of the final quarter. For job seekers, this pattern suggests that while opportunities may temporarily slow in early summer, late July through August presents a strong window for applications as employers actively seek talent."
  },
  {
    "objectID": "data_analysis.html#top-job-titles-by-frequency",
    "href": "data_analysis.html#top-job-titles-by-frequency",
    "title": "Exploratory Data Analysis",
    "section": "Top Job Titles by Frequency",
    "text": "Top Job Titles by Frequency\nWhy this visualization\nThis graph shows which roles are in highest demand — great for resume optimization and understanding what skills employers seek most often.\n\n\ntop_titles = df[\"title_name\"].value_counts().nlargest(20).reset_index()\ntop_titles.columns = [\"Job Title\", \"Count\"]\n\n\nfig = px.bar(\n    top_titles,\n    x=\"Count\",\n    y=\"Job Title\",\n    orientation=\"h\",\n    title=\"Top 20 Job Titles by Frequency\",\n    labels={\"Count\": \"Number of Postings\", \"Job Title\": \"Job Title\"},\n    height=600\n)\n\nfig.update_layout(yaxis=dict(autorange=\"reversed\"))  # highest at top\nfig.show()\n\n                            \n                                            \n\n\nInsights\nThis bar chart provides a broader view of the top 20 job titles by frequency, highlighting dominant roles within the job market. “Data Analysts” clearly lead in demand, with over 8,000 postings — reaffirming the central role of data professionals in today’s workforce.\nOther high-demand roles include “Business Intelligence Analysts,” “Enterprise Architects,” and “Oracle Cloud HCM Consultants,” which suggests a strong emphasis on both data strategy and cloud-based enterprise solutions. The appearance of niche titles like “SAP Consultants,” “Data Governance Analysts,” and “Data Quality Analysts” reflects organizations’ growing need for specialized expertise in maintaining and managing data infrastructure.\nOverall, this visualization reinforces the importance of analytics, enterprise systems, and data architecture in the current job market."
  },
  {
    "objectID": "data_analysis.html#top-job-titles-by-frequency-1",
    "href": "data_analysis.html#top-job-titles-by-frequency-1",
    "title": "Exploratory Data Analysis",
    "section": "Top Job Titles by Frequency",
    "text": "Top Job Titles by Frequency\nWhy this visualization Compares earning potential across work modes — important for evaluating the financial trade-offs between remote, hybrid, and on-site roles.\n\n\ndf_salary = df[df[\"salary\"].notnull() & (df[\"salary\"] &lt; 300000)]\n\n# Box plot: salary by remote_type_name\nfig = px.box(\n    df_salary,\n    x=\"remote_type_name\",\n    y=\"salary\",\n    title=\"Salary Distribution by Job Type (Remote vs. On-Site)\",\n    labels={\"remote_type_name\": \"Job Type\", \"salary\": \"Salary ($)\"},\n    points=\"all\"\n)\n\nfig.update_layout(height=600)\nfig.show()\n\n                            \n                                            \n\n\nInsights\nThis box plot presents the salary distribution across different job types, comparing remote, hybrid, on-site, and unclassified roles. A key takeaway is that salaries for remote and hybrid roles tend to be higher and more consistent than those for on-site positions. Remote jobs, in particular, show a tight interquartile range clustered around $110K–$125K, indicating a strong market demand and willingness to pay for location-flexible roles.\nIn contrast, on-site (“Not Remote”) jobs show a broader distribution, with a wider range of salaries and a lower median. This suggests more variability in pay, possibly due to a wider mix of roles (from entry-level to senior) or differing cost-of-living adjustments by region.\nOverall, the visualization reinforces a trend seen across industries: remote and hybrid roles are not only desirable for flexibility but also competitive in compensation. Job seekers aiming for high-paying opportunities may benefit from targeting remote-friendly employers, especially in tech and analytics fields."
  },
  {
    "objectID": "data_analysis.html#conclusion",
    "href": "data_analysis.html#conclusion",
    "title": "Exploratory Data Analysis",
    "section": "Conclusion",
    "text": "Conclusion\nThe exploratory data analysis (EDA) provided a comprehensive overview of the 2024 job market landscape by examining job postings, salaries, and structural patterns across various dimensions.\n\nTop Industries by Postings A bar chart of the most active industries revealed strong hiring demand in sectors like technology, consulting, and staffing. This highlights which fields are driving employment opportunities.\nSalary Distribution by Industry A box plot compared salary ranges across top industries, showing clear disparities in compensation. Sectors like finance and tech offered both high pay and broad salary variability, while others showed lower, more consistent pay.\nRemote vs. On-Site Jobs A pie chart illustrated that the majority of job postings lacked explicit remote classification, but among those that did, remote jobs were more prevalent than on-site roles. This reflects the growing demand for flexible work arrangements.\nJob Postings by U.S. State A choropleth map identified geographic disparities in job availability, with states like Texas, California, and Florida leading in job volume. This helps job seekers target locations with strong hiring activity.\nJob Postings Over Time A time series line chart revealed a seasonal trend: a dip in postings during early summer followed by a strong recovery in July and August. This suggests mid-year slowdowns and hiring rebounds tied to business cycles.\nTop Job Titles by Frequency A horizontal bar chart showed that “Data Analyst” and related roles dominate the job market. The presence of various analyst titles reflects high demand for data-driven decision-making skills across industries.\nSalary Distribution by Job Type A box plot comparing remote, hybrid, and on-site roles indicated that remote and hybrid jobs offer competitive — often higher — median salaries. This supports the idea that flexibility and compensation can go hand in hand.\n\nTogether, these seven visualizations provide a well-rounded understanding of the job market’s current state — from what roles are most in demand, where they are, how much they pay, and how work modes affect earning potential. This foundation supports deeper analysis and career strategy planning for job seekers and workforce analysts alike."
  }
]